name: Build, Test and Check Code Quality

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read  # Allows reading repository contents
  actions: write  # Enables creating annotations (optional)

jobs:
  build-and-test:
    runs-on: ubuntu-22.04

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Install dependencies (cmake, g++, make, clang-tidy, cppcheck, clang-format)
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake g++ make clang-tidy cppcheck clang-format

      ######

      # Run Clang-Tidy for 6.rotate_array and continue on error
      - name: Run Clang-Tidy for 6.rotate_array
        run: |
          cd Labs1/6.rotate_array
          clang-tidy src/*.cpp --checks='*' --fix || true
        continue-on-error: true

      # Run Cppcheck for 6.rotate_array and continue on error
      - name: Run Cppcheck for 6.rotate_array
        run: |
          cd Labs1/6.rotate_array
          cppcheck --enable=all --inconclusive --force --quiet src || true
        continue-on-error: true

      # Run Clang-Format for 6.rotate_array and continue on error
      - name: Run Clang-Format for 6.rotate_array
        run: |
          cd Labs1/6.rotate_array
          clang-format -i src/*.cpp src/*.h || true
        continue-on-error: true

      # Build and test 6.rotate_array
      - name: Build and test 6.rotate_array
        run: |
          cd Labs1/6.rotate_array
          mkdir -p build
          cd build
          cmake ..
          make
          ./test_rotate_array

      ######

      # Run Clang-Tidy for 5.longest_common_prefix and continue on error
      - name: Run Clang-Tidy for 5.longest_common_prefix
        run: |
          cd Labs1/5.longest_common_prefix
          clang-tidy src/*.cpp --checks='*' --fix || true
        continue-on-error: true

      # Run Cppcheck for 5.longest_common_prefix and continue on error
      - name: Run Cppcheck for 5.longest_common_prefix
        run: |
          cd Labs1/5.longest_common_prefix
          cppcheck --enable=all --inconclusive --force --quiet src || true
        continue-on-error: true

      # Run Clang-Format for 5.longest_common_prefix and continue on error
      - name: Run Clang-Format for 5.longest_common_prefix
        run: |
          cd Labs1/5.longest_common_prefix
          clang-format -i src/*.cpp src/*.h || true
        continue-on-error: true

      # Build and test 5.longest_common_prefix
      - name: Build and test 5.longest_common_prefix
        run: |
          cd Labs1/5.longest_common_prefix
          mkdir -p build
          cd build
          cmake ..
          make
          ./test_longest_common_prefix

      ######

      # Run Clang-Tidy for 4.find_second_largest_element and continue on error
      - name: Run Clang-Tidy for 4.find_second_largest_element
        run: |
          cd Labs1/4.find_second_largest_element
          clang-tidy src/*.cpp --checks='*' --fix || true
        continue-on-error: true

      # Run Cppcheck for 4.find_second_largest_element and continue on error
      - name: Run Cppcheck for 4.find_second_largest_element
        run: |
          cd Labs1/4.find_second_largest_element
          cppcheck --enable=all --inconclusive --force --quiet src || true
        continue-on-error: true

      # Run Clang-Format for 4.find_second_largest_element and continue on error
      - name: Run Clang-Format for 4.find_second_largest_element
        run: |
          cd Labs1/4.find_second_largest_element
          clang-format -i src/*.cpp src/*.h || true
        continue-on-error: true

      # Build and test 4.find_second_largest_element
      - name: Build and test 4.find_second_largest_element
        run: |
          cd Labs1/4.find_second_largest_element
          mkdir -p build
          cd build
          cmake ..
          make
          ./test_find_second_largest_element

      ######

      # Run Clang-Tidy for 3.string_compression and continue on error
      - name: Run Clang-Tidy for 3.string_compression
        run: |
          cd Labs1/3.string_compression
          clang-tidy src/*.cpp --checks='*' --fix || true
        continue-on-error: true

      # Run Cppcheck for 3.string_compression and continue on error
      - name: Run Cppcheck for 3.string_compression
        run: |
          cd Labs1/3.string_compression
          cppcheck --enable=all --inconclusive --force --quiet src || true
        continue-on-error: true

      # Run Clang-Format for 3.string_compression and continue on error
      - name: Run Clang-Format for 3.string_compression
        run: |
          cd Labs1/3.string_compression
          clang-format -i src/*.cpp src/*.h || true
        continue-on-error: true

      # Build and test 3.string_compression
      - name: Build and test 3.string_compression
        run: |
          cd Labs1/3.string_compression
          mkdir -p build
          cd build
          cmake ..
          make
          ./test_string_compression

      ######

      # Run Clang-Tidy for 2.array_reversal and continue on error
      - name: Run Clang-Tidy for 2.array_reversal
        run: |
          cd Labs1/2.array_reversal
          clang-tidy src/*.cpp --checks='*' --fix || true
        continue-on-error: true

      # Run Cppcheck for 2.array_reversal and continue on error
      - name: Run Cppcheck for 2.array_reversal
        run: |
          cd Labs1/2.array_reversal
          cppcheck --enable=all --inconclusive --force --quiet src || true
        continue-on-error: true

      # Run Clang-Format for 2.array_reversal and continue on error
      - name: Run Clang-Format for 2.array_reversal
        run: |
          cd Labs1/2.array_reversal
          clang-format -i src/*.cpp src/*.h || true
        continue-on-error: true

      # Build and test 2.array_reversal
      - name: Build and test 2.array_reversal
        run: |
          cd Labs1/2.array_reversal
          mkdir -p build
          cd build
          cmake ..
          make
          ./test_array_reversal

      ######

      # Run Clang-Tidy for 1.palindrome_checker and continue on error
      - name: Run Clang-Tidy for 1.palindrome_checker
        run: |
          cd Labs1/1.palindrome_checker
          clang-tidy src/*.cpp --checks='*' --fix || true
        continue-on-error: true

      # Run Cppcheck for 1.palindrome_checker and continue on error
      - name: Run Cppcheck for 1.palindrome_checker
        run: |
          cd Labs1/1.palindrome_checker
          cppcheck --enable=all --inconclusive --force --quiet src || true
        continue-on-error: true

      # Run Clang-Format for 1.palindrome_checker and continue on error
      - name: Run Clang-Format for 1.palindrome_checker
        run: |
          cd Labs1/1.palindrome_checker
          clang-format -i src/*.cpp src/*.h || true
        continue-on-error: true

      # Build and test 1.palindrome_checker
      - name: Build and test 1.palindrome_checker
        run: |
          cd Labs1/1.palindrome_checker
          mkdir -p build
          cd build
          cmake ..
          make
          ./test_palindrome
